/* Flexbox mixins */
.zs-slider {
  display: block;
  cursor: pointer;
  height: 100%;
}
.zs-slider [range] {
  background: #fff;
  border: 1px solid #d0dde6;
  border-radius: 0.3em;
  position: relative;
  cursor: pointer;
}
.zs-slider [handle] {
  padding: 0;
  cursor: pointer;
  display: inline-block;
  position: absolute;
  width: 1.42875em;
  height: 1.42875em;
  min-width: 13px;
  min-height: 13px;
}
.zs-slider [handle]:after {
  content: '';
  position: absolute;
  top: -0.714375em;
  bottom: -0.714375em;
  left: -0.714375em;
  right: -0.714375em;
}
.zs-slider [handle]:focus {
  outline: none;
}
.zs-slider [ruler] {
  position: relative;
}
.zs-slider [ruler] > div {
  color: #53565a;
  position: absolute;
  text-align: center;
  min-width: 1.42875em;
}
.zs-slider [ruler] > div div {
  background: #53565a;
  margin: 0 auto;
}
.zs-slider [fill] {
  background: rgba(1, 166, 220, 0.4);
  border: 1px solid #d6e3f4;
  position: absolute;
}
.zs-slider .zs-button,
.zs-slider button {
  border: 1px solid #3577C9;
  color: #3577C9;
  background-color: #fff;
  border-radius: 0.3em;
  padding: 0.51785714em 1.42em 0.51785714em 1.42em;
  min-height: 2.42857143em;
  white-space: nowrap;
  -webkit-appearance: none;
  min-width: auto;
  min-height: auto;
  padding: 0;
}
.zs-slider .zs-button:hover,
.zs-slider button:hover {
  cursor: pointer;
  color: #0071fe;
  border: 1px solid #0071fe;
}
.zs-slider .zs-button:hover .zs-icon,
.zs-slider button:hover .zs-icon {
  color: #0071fe;
}
.zs-slider[horizontal] {
  margin-top: 2.8575em;
}
.zs-slider[horizontal] [range] {
  height: 1.143em;
  width: 100%;
}
.zs-slider[horizontal] [handle] {
  margin-top: -1px;
  top: -0.142875em;
  touch-action: pan-y;
  -ms-touch-action: pan-y;
}
.zs-slider[horizontal] [ruler] {
  top: -2.8575em;
  left: 0.714375em;
  height: 1.5em;
}
.zs-slider[horizontal] [ruler] > div div {
  width: 1px;
  height: 0.33333333em;
}
.zs-slider[horizontal] [fill] {
  top: -1px;
  height: 1.143em;
}
.zs-slider[vertical] [range] {
  width: 1.143em;
  min-height: 7.14375em;
  height: 100%;
}
.zs-slider[vertical] [handle] {
  width: 1.42875em;
  height: 1.42875em;
  margin-left: -1px;
  left: -0.142875em;
  touch-action: pan-x;
  -ms-touch-action: pan-x;
}
.zs-slider[vertical] [ruler] {
  top: -0.714375em;
  left: 2.143125em;
  width: 1.5em;
}
.zs-slider[vertical] [ruler] > div {
  padding-left: 1em;
  width: 2.5em;
}
.zs-slider[vertical] [ruler] > div div {
  height: 1px;
  width: 0.33333333em;
  position: absolute;
  top: 50%;
  left: 0;
}
.zs-slider[vertical] [fill] {
  bottom: -1px;
  left: -1px;
  width: 1.143em;
}
.zs-slider[horizontal][ruler-position="bottom"] [ruler] {
  top: 5px;
}
.zs-slider[vertical][ruler-position="left"] [range] {
  margin-left: 3.2em;
}
.zs-slider[vertical][ruler-position="left"] [ruler] {
  left: 0;
}
.zs-slider[vertical][ruler-position="left"] [ruler] > div {
  padding-left: 0;
  padding-right: 1em;
  text-align: right;
}
.zs-slider[vertical][ruler-position="left"] [ruler] > div div {
  left: auto;
  right: 0;
}
.zs-slider[disabled] {
  opacity: 0.4;
}
.zs-form .zs-warning [fill] {
  background-color: #fff9e1;
  border-color: #d0dde6;
}
.zs-form .zs-warning button,
.zs-form .zs-warning button:hover {
  background-color: #fff9e1;
  border-color: #fdcd17;
}
.zs-form .zs-error [range] {
  border-color: #d1715a;
}
.zs-form .zs-error [fill] {
  background-color: #f8e9e6;
  border-color: #d1715a;
}
.zs-form .zs-error button,
.zs-form .zs-error button:hover {
  background-color: #f8e9e6;
  border-color: #d1715a;
}
zs-area-slider {
  background-color: transparent;
  outline: 0;
  font-weight: normal;
  border: 1px solid #98a4ae;
  color: #53565a;
  padding: 0.51785714em 0.568em 0.51785714em 0.568em;
  -webkit-appearance: none;
  border-radius: 0;
  min-width: 17.85714286em;
  display: block;
  min-height: 4em;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  padding: 0;
  touch-action: pan-x;
  -ms-touch-action: pan-x;
}
zs-area-slider[type="number"] {
  text-align: right;
}
zs-area-slider > [handle],
zs-area-slider > [handle].zs-button {
  z-index: 1;
  position: absolute;
  width: 1em;
  height: 1em;
  border-radius: 1em;
  font-size: 1em;
  line-height: 1em;
  padding: 0;
  min-height: auto;
  box-shadow: 0 0 3px #fff;
  border-width: 1px;
  touch-action: pan-x;
  -ms-touch-action: pan-x;
}
zs-area-slider > [handle]:focus,
zs-area-slider > [handle].zs-button:focus {
  outline: none;
  border-color: #0c5cbf;
}
/*# sourceMappingURL=data:application/json;base64, */