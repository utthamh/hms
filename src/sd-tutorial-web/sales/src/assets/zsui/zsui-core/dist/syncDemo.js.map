{"version":3,"sources":["../demo/syncDemo.m.js"],"names":["MyButton","innerHTML","value","getAttribute","name","oldValue","newValue","console","log","render","syncAttr","addEventListener","Math","random","syncProp","HTMLButtonElement","prototype","syncProps","customElements","define","extends"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAGMA,Q;;;;;AACL,wBAAc;AAAA;;AAAA;AAEb;;;;+BAIQ;AACR,aAAKC,SAAL,GAAiB,CAAC,KAAKC,KAAL,IAAc,CAAf,IAAoB,GAApB,IAA2B,KAAKC,YAAL,CAAkB,OAAlB,KAA8B,CAAzD,CAAjB;AACA;;;8CACuBC,I,EAAMC,Q,EAAUC,Q,EAAU;AACjDC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,IAA5B,EAAkCC,QAAlC,EAA4CC,QAA5C;AACA,aAAKG,MAAL;AACA;;;+CACwBL,I,EAAMC,Q,EAAUC,Q,EAAU;AAClDC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,IAA5B,EAAkCC,QAAlC,EAA4CC,QAA5C;;AACA,YAAIF,IAAI,IAAI,OAAZ,EAAqB;AACpB,eAAKM,QAAL,CAAcN,IAAd,EAAoBE,QAApB,EAA8B,QAA9B;AACA;;AACD,YAAIF,IAAI,IAAI,UAAZ,EAAwB;AACvB,eAAKM,QAAL,CAAcN,IAAd,EAAoBE,QAApB,EAA8B,SAA9B;AACA;AACD;;;0CACmB;AACnB,aAAKG,MAAL,GADmB,CAGnB;;AACA,aAAKE,gBAAL,CAAsB,OAAtB,EAA+B,YAAW;AACzC,eAAKT,KAAL,GAAa,CAAC,EAAEU,IAAI,CAACC,MAAL,KAAc,GAAhB,CAAd;AACA,SAFD,EAEG,IAFH;AAIA,aAAKC,QAAL,CAAc,OAAd;AACA,aAAKA,QAAL,CAAc,UAAd;AACA;;;0BA7B+B;AAC/B,eAAO,CAAC,OAAD,EAAU,UAAV,CAAP;AACA;;;;qBANqBC,iB;;AAoCvB,mBAAIf,QAAQ,CAACgB,SAAb,EAAwBC,mBAAxB;AACAC,EAAAA,cAAc,CAACC,MAAf,CAAsB,WAAtB,EAAmCnB,QAAnC,EAA6C;AAACoB,IAAAA,OAAO,EAAE;AAAV,GAA7C","sourcesContent":["import syncProps from '../src/smart/syncProps.m.js';\r\nimport {mix} from '../src/smart/mixin.m.js';\r\n\r\nclass MyButton extends HTMLButtonElement {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['value', 'disabled'];\r\n\t}\r\n\trender() {\r\n\t\tthis.innerHTML = (this.value || 0) + \"/\" + (this.getAttribute('value') || 0);\r\n\t}\r\n\tpropertyChangedCallback(name, oldValue, newValue) {\r\n\t\tconsole.log('prop changed', name, oldValue, newValue);\r\n\t\tthis.render();\r\n\t}\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconsole.log('attr changed', name, oldValue, newValue);\r\n\t\tif (name == 'value') {\r\n\t\t\tthis.syncAttr(name, newValue, 'number');\r\n\t\t}\r\n\t\tif (name == 'disabled') {\r\n\t\t\tthis.syncAttr(name, newValue, 'boolean');\r\n\t\t}\r\n\t}\r\n\tconnectedCallback() {\r\n\t\tthis.render();\r\n\t\t\r\n\t\t// Randomly change the value on click\r\n\t\tthis.addEventListener('click', function() {\r\n\t\t\tthis.value = ~~(Math.random()*100);\t\t\t\r\n\t\t}, true);\r\n\r\n\t\tthis.syncProp('value');\r\n\t\tthis.syncProp('disabled');\r\n\t}\r\n}\r\n\r\nmix(MyButton.prototype, syncProps);\r\ncustomElements.define('my-button', MyButton, {extends: 'button'});"],"file":"syncDemo.js"}